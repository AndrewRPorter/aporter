version: '3.1'

services:
    nginx:
        image: nginx:1.13.7
        restart: always
        container_name: nginx
        volumes:
            - ./:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - /home/andrew/dhparam:/etc/ssl/certs
        ports:
            - 80:80
            - 443:443
        networks:
            - my-network
        depends_on:
            - flask
    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - ./:/var/www/
        depends_on:
            - flask
        command: certonly --webroot --webroot-path=/var/www/ --email porter.r.andrew@gmail.com --agree-tos --no-eff-email --force-renewal -d aporter.me  -d www.aporter.me
    flask:
        restart: unless-stopped
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: flask
        command: gunicorn app.wsgi --certfile /etc/letsencrypt/live/aporter.me/fullchain.pem --keyfile /etc/letsencrypt/live/aporter.me/privkey.pem --bind 0.0.0.0 --workers 4
        volumes:
            - ./:/var/www
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
        networks:
            my-network:
                aliases:
                    - flask-app
volumes:
    certbot-etc:
    certbot-var:
    web-root:
        driver: local
        driver_opts:
            type: none
            device: ./app/static/
            o: bind
    dhparam:
        driver: local
        driver_opts:
            type: none
            device: /home/andrew/dhparam/
            o: bind
networks:
    my-network:
        driver: bridge